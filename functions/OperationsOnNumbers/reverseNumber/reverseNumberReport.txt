
### **Title and Overview**  
**Program Name**: Number Reversal  
**Purpose**: This program reverses the digits of a non-negative integer.

---

### **Features**  
- Reverses the digits of an integer and returns the reversed number.
- Handles integers of varying lengths efficiently.

---

### **Inputs and Outputs**  
- **Inputs**:  
  - A single integer (`num`) as input.  
  - Assumes `num` is non-negative.

- **Outputs**:  
  - An integer representing the reversed number.

---

### **Workflow**  
1. Initialize a variable (`R`) to store the reversed number and set it to 0.  
2. Repeat the following steps while the input number (`num`) is greater than 0:  
   - Extract the last digit of the number using the modulo operator (`num % 10`).  
   - Append the extracted digit to the reversed number by updating `R = R * 10 + digit`.  
   - Remove the last digit of the number by dividing it by 10 (`num = num / 10`).  
3. Once the number becomes 0, return the reversed number (`R`).

---

### **Strengths and Limitations**  
- **Strengths**:  
  - Efficiently reverses the digits of a number using a simple loop.  
  - Works for any non-negative integer input.  

- **Limitations**:  
  - Does not handle negative numbers or non-integer inputs.  

---

### **Code Summary**  
- **Programming Language**: C  
- **Tools or Libraries Used**: None; relies solely on standard arithmetic operations and control structures.

