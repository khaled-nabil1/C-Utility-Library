### **Title and Overview**  
**Program Name**: Sum of Prime Numbers  
**Purpose**: This program calculates the sum of all prime numbers up to a given number `n`.

---

### **Features**  
1. Efficiently checks if a number is prime using a loop to check divisibility up to the square root of the number.  
2. Computes the sum of all prime numbers up to a specified limit `n`.  
3. Uses a helper function to isolate the prime-checking logic and make the code modular.

---

### **Inputs and Outputs**  
1. **Inputs**:  
   - An integer `n`, the upper limit up to which prime numbers are summed.  
2. **Outputs**:  
   - Returns the sum of all prime numbers from 1 to `n`.

---

### **Workflow**  
1. For each number `i` from 1 to `n`, check if it is prime using the `isPrime` function.  
2. If `i` is prime, add it to the running total `S`.  
3. After looping through all numbers from 1 to `n`, return the sum `S`.

---

### **Strengths and Limitations**  
1. **Strengths**:  
   - Uses a helper function to modularize the prime checking, making the code more readable and reusable.  
   - Efficient for small to moderately large values of `n`.  
   
2. **Limitations**:  
   - The prime-checking function uses a basic approach that can be inefficient for very large values of `n` due to checking divisibility up to `n/2`.  

---

### **Code Summary**  
1. **Programming Language**: C  
2. **Tools or Libraries Used**:  
   - Standard loops and arithmetic operations.  
   - Boolean type from `<stdbool.h>`.  
3. **Approach**:  
   - Uses a simple primality test combined with a loop to accumulate the sum of primes.  

---
