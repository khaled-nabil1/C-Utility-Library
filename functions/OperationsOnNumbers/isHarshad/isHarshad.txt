### **Title and Overview**  
**Program Name**: Harshad Number Checker  
**Purpose**: This program checks if a given number (`num`) is a Harshad number. A Harshad number is an integer that is divisible by the sum of its digits.

---

### **Features**  
1. Computes the sum of digits of the number.  
2. Checks if the number is divisible by the sum of its digits.  
3. Returns `true` if the number is a Harshad number and `false` otherwise.

---

### **Inputs and Outputs**  
1. **Inputs**:  
   - A single integer (`num`), assumed to be a non-negative integer.  
2. **Outputs**:  
   - Returns `true` if the number is a Harshad number (i.e., divisible by the sum of its digits).  
   - Returns `false` if the number is not a Harshad number.

---

### **Workflow**  
1. If the number is a single digit, return `true` since all single-digit numbers are divisible by themselves.  
2. Initialize a variable `S` to store the sum of the digits of `num`.  
3. Use a `while` loop to sum the digits of the number by repeatedly dividing `num` by 10 and adding the remainder (the last digit) to `S`.  
4. After calculating the sum of digits, check if the original number `n` is divisible by `S`.  
5. Return `true` if it is divisible (Harshad number), otherwise return `false`.

---

### **Strengths and Limitations**  
1. **Strengths**:  
   - Simple and efficient check for Harshad numbers.  
   - Works correctly for both single-digit and multi-digit numbers.  
   
2. **Limitations**:  
   - Assumes the input `num` is non-negative.  
   - The program doesn't handle edge cases like zero explicitly, though the result would be correct for zero.  
   
---

### **Code Summary**  
1. **Programming Language**: C  
2. **Tools or Libraries Used**:  
   - `<stdbool.h>` for the `bool` data type and `true`/`false` values.  

---
